{
  "name": "xbrowsersync-app",
  "description": "The xBrowserSync client app.",
  "version": "1.2.0",
  "author": "xBrowserSync",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/xBrowserSync/App.git"
  },
  "bugs": {
    "url": "https://github.com/xBrowserSync/App/issues"
  },
  "dependencies": {
    "angular": "1.5.x",
    "angular-animate": "1.5.x",
    "angular-complexify": "0.3.x",
    "angular-hammer": "2.2.x",
    "angular-sanitize": "1.5.x",
    "bootstrap": "3.3.x",
    "circle-chart": "1.0.x",
    "crypto-js": "3.1.x",
    "font-awesome": "4.6.x",
    "hammerjs": "2.0.x",
    "qr-js": "1.1.x",
    "underscore": "1.8.x"
  },
  "devDependencies": {
    "cordova": "6.3.x",
    "jshint": "2.9.x",
    "minify": "2.0.x",
    "npm-build-tools": "2.2.x",
    "node-sass": "3.7.x",
    "uglify-js": "2.7.x"
  },
  "config": {
    "platformPath": ""
  },
  "scripts": {
    "test": "npm run lint",
    "lint": "jshint .",
    "prebuild:chrome": "echo 'Clearing old build...' && npm run clearprevbuild",
    "build:chrome": "echo 'Building...' && npm run commonbuildsteps --xbrowsersync-app:platformPath=platform/chrome",
    "postbuild:chrome": "echo 'Build complete.'",
    "prebuild:webapp": "echo 'Clearing old build...' && npm run clearprevbuild",
    "build:webapp": "echo 'Building...' && npm run commonbuildsteps --xbrowsersync-app:platformPath=platform/webapp",
    "postbuild:webapp": "echo 'Build complete.'",
    "prebuild:mobileapps": "echo 'Clearing old build...' && npm run clearprevbuild",
    "build:mobileapps": "echo 'Building...' && npm run commonbuildsteps --xbrowsersync-app:platformPath=platform/mobileapps",
    "postbuild:mobileapps": "npm run mobileappsbuildsteps",
    "clearprevbuild": "n-clean build",
    "commonbuildsteps": "npm run copyfiles --xbrowsersync-app:platformPath=$npm_package_config_platformPath && npm run compilecss && npm run compilejs",
    "copyfiles": "n-copy --source $npm_package_config_platformPath --destination build \"*\" \"**/*\" && n-copy --source . --destination build \"app.html\" \"js/app-initialise.js\" \"css/*\" \"img/*\" \"fonts/*\" && n-copy --source fonts --destination build/fonts \"**/*\" && n-copy --source node_modules/font-awesome/fonts --destination build/fonts/font-awesome \"**/*\"",
    "compilecss": "node-sass build/css/font-awesome.scss build/css/font-awesome.css -q & node-sass build/css/styles.scss build/css/styles.css -q & node-sass build/css/platform.scss build/css/platform.css -q",
    "compilejs": "minify build/css/font-awesome.css node_modules/bootstrap/dist/css/bootstrap.min.css build/css/styles.css build/css/platform.css > build/css/styles.min.css & n-concat node_modules/angular/angular.min.js node_modules/angular-animate/angular-animate.min.js node_modules/angular-complexify/build/angular-complexify.min.js node_modules/angular-sanitize/angular-sanitize.min.js node_modules/underscore/underscore-min.js node_modules/circle-chart/build/circle-chart-min.js node_modules/crypto-js/crypto-js.js node_modules/hammerjs/hammer.min.js node_modules/angular-hammer/angular.hammer.min.js node_modules/qr-js/qr.js | n-pipe build/js/dependencies.min.js & uglifyjs --compress --source-map-include-sources --source-map build/js/scripts.min.js.map --source-map-url scripts.min.js.map --output build/js/scripts.min.js -- js/global.js js/utility.js js/httpInterceptor.js js/api.js js/bookmarks.js js/platform.js build/js/platformImplementation.js js/app.js",
    "mobileappsbuildsteps": "n-copy --source build --destination build/cordova/www --ignore cordova/** && cd build/cordova && cordova build",
    "postmobileappsbuildsteps": "echo 'Build complete.'"
  }
}
